Version Control: Add /v1/prefix to all routes so future changes (v2) don't break things.

Authentication: Investigate JSON web tokens: http://jwt.io/. This will prevent things like vulnerability scans from exhausing the supply of serial numbers. 

Scaling: Investigate eTags: http://en.wikipedia.org/wiki/HTTP_ETag.

Buffering: Consider using golang bytes.Buffer for buffered logging, at least for file io.

Error Handling: improve with gorilla recovery handler or other custom approaches. See:
	https://stackoverflow.com/questions/33904503/go-gorilla-panic-handler-to-respond-with-custom-status
	https://elithrar.github.io/article/http-handler-error-handling-revisited/ 
	https://dave.cheney.net/2014/12/24/inspecting-errors

	Tried this in 'routers.go' (doesn't work):

		var handler http.Handler

		handler = handlers.RecoveryHandler(
			handlers.PrintRecoveryStack(true),
			handlers.RecoveryLogger(errorLog),
		)

		handler = handler(route.HandlerFunc)
		handler = handlers.CombinedLoggingHandler(accessLog, handler)

